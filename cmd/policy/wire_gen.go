// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/0x726f6f6b6965/go-auth/config"
	"github.com/0x726f6f6b6965/go-auth/internal/services"
	"github.com/0x726f6f6b6965/go-auth/pkg/logger"
	"github.com/0x726f6f6b6965/go-auth/protos/policy/v1"
)

// Injectors from wire.go:

func initPolicyService(cfg *config.AppConfig) (v1.PolicyServiceServer, func(), error) {
	configLogConfig := logConfig(cfg)
	zapLogger, cleanup, err := logger.NewLogger(configLogConfig)
	if err != nil {
		return nil, nil, err
	}
	policyServiceServer := services.NewPolicyService(zapLogger)
	return policyServiceServer, func() {
		cleanup()
	}, nil
}
